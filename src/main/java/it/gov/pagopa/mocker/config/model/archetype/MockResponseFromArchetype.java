package it.gov.pagopa.mocker.config.model.archetype;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import it.gov.pagopa.mocker.config.model.mockresource.ResponseHeader;
import lombok.*;

import javax.validation.Valid;
import java.io.Serializable;
import java.util.List;

/**
 * The model that define the mocked response that will be generated by Mocker
 * if the rule condition are all verified.
 */
@Data
@Builder(toBuilder = true)
@NoArgsConstructor
@AllArgsConstructor
@ToString
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Schema(description = "")
public class MockResponseFromArchetype implements Serializable {

    @JsonProperty("status")
    private Integer status;

    @JsonProperty("headers")
    @Valid
    private List<ResponseHeader> headers;

    @JsonProperty("static_values")
    @Valid
    private List<StaticParameterValue> staticValues;
}
